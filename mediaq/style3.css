.grid-container {
    display: grid;
    /* grid-template-columns: 300px 100px; */
    /* grid-template-columns: 2fr 2fr; */
    grid-template-columns: repeat(3, 300px); 
    
    /* grid-template-columns: repeat(3, 300px); 
    este es el más común el que se usa  */

    /* grid-template-rows: 300px 100px; */
    grid-template-rows: repeat(3, 200px);
    
    /* grid-row-gap: 20px; */
    /* grid-column-gap: 50px; */
    /* grid-gap: 70px; */

    /* grid-auto-rows: 150px; */
    /* grid-auto-rows: minmax(150px, auto); */


    grid-template-columns: 200px 250px;
    grid-auto-rows: minmax(150px, auto);
    grid-gap: 20px;
    grid-template-areas:
    "header header"
    "sidebar content"
    "sidebar content"
}

.grid-item-1 {
    grid-area: header;
}

.grid-item-2 {
    grid-area: sidebar;
}

.grid-item-3 {
    grid-area: content;
}

/* does not define rows or columns by default */

/* fr is the same as flex grow of 2 and flex grow of 1 */

/* if you dont know how large your rows are gonna be or 
next rows that are added after template rows all rows 
that arent defined will auto fix to grid auto */


/* .grid-container {
    display: grid;
    grid-template-columns: 200px 250px;
    grid-auto-rows: minmax(150px, auto);
    grid-gap: 20px;

}

.grid-item-1 {
    grid-column-start: 1;
    grid-column-end: 3;
}

.grid-item-2 {
 grid-row-start: 2;
 grid-row-end: 4;
}

.grid-item-3 {
    grid-row-start: 2;
    grid-row-end: 4;

} */

/* instead of using column end 3 we could use
-1 and it will span to the end of the row 
a shortcut instead of adding start and end is 
grid-column: 1 / -1;*/

/* grid-column: span 2;
grid-row: span 2;

also works as a shortcut instead of adding 
start and end */



/* we can also use justify-content inside .grid-container
as well as align content but instead of using
flex-end we just use end or start or center */